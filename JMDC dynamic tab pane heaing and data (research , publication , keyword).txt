






            // console.log("nnn" , nnn.ResearchHeadDesc)
            // console.log("index" , index)

            // function elementre(){


            //     for (let j = 0; j < ResTab.length; j++) {
            //         const element = ResTab[j];

            //         if (element.ResearchHeadDesc === "Keyword") {



            //             return element.ResearchHeadDesc

            //         }



            //     }

            // }


            // console.log("elementre" , elementre())

            // var aas = []

            // const foundDuplicateName = ResTab.find((nnn, index) => {



            //     console.log("nnn" , nnn)
            //     console.log("index" , index)



            //          ResTab.find((x, ind)=>{


            //             if(x.ResearchHeadDesc === nnn.ResearchHeadDesc && ind != index){



            //                     aas.push({
            //                         "Research" : x.ResearchHeadDesc})






            //                     }






            //             }) 
            //              // console.log("x" , x)
            //              // console.log("ind" , ind)





            //             // for (let i = 0; i < array.length; i++) {
            //             //     const element = array[i];

            //             // }






            //     // }

            //     })

            // console.log("Found Duplicate" , foundDuplicateName)
            // console.log("aas" , aas)



            // ResTab.map( ress => { 

            //     console.log("value" , ress)

            //     // return item.name 
            // });




            // var isDuplicate = valueArr.some(

            //     function(item, idx){ 

            //     return valueArr.indexOf(item) != idx 


            // });


            // console.log("value",valueArr);


            // console.log("value" , ResTab);


            // for (let k = 0; k < ResTab.length; k++) {

            //     const Res = ResTab[k];

            // for (let j = 0; j < Res.length; j++) {
            //     const element = Res[j];



            //     console.log("element" , element)
            //     console.log(Res , "Res")



            // }





            //   dynaminChangeCss(Res.ResearchHeadId)

            // cardRes.innerHTML += `

            //         <div class="card" id="cardDetail3" onclick=active()>

            //             <div onclick='dynaminChangeCss(${Res.ResearchHeadID} , this)' class="card-header" id="${Res.ResearchHeadID}" data-toggle="collapse" data-target="#${Res.ResearchDesc}" aria-expanded="false" aria-controls="collapseTwo">

            //                 <h5 class="mb-0">

            //                     <i class="fa-solid fa-minus" id="${Res.ResearchHeadID}">

            //                         <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#${Res.ResearchDesc}" aria-expanded="false" aria-controls="collapseTwo">

            //                                 ${Res.ResearchHeadDesc}

            //                                 </button>

            //                                 </i>

            //                                 </h5>

            //                                 </div>

            //                                     <div id="${Res.ResearchDesc}" class="collapse show" aria-labelledby="headingOne"
            //                                     data-parent="#accordion">

            //                                     <div class="card-body">


            //                                         <div class="eduList" id="qualist">



            //                                         <li style="list-style:none"><i class="fa fa-regular fa-circle-dot"></i>
            //                                             ${Res.ResearchDesc}
            //                                         </li>

            //                                     </div>

            //                                     </div>


            //     </div>
            //     </div>


            // `

            // }
